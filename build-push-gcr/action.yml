name: Docker Publish to Google Cloud Registry

inputs:
  gcloud_registry:
    description: 'Google Cloud Registry'
    required: true
  gcloud_project_id:
    description: 'Google Cloud Project ID'
    required: true
  gcloud_service_key:
    description: 'Google Cloud Service Key (JSON)'
    required: true
  docker_image_name:
    description: 'Docker Image Name (contains repo and image name, e.g. my-repo/my-image)'
    required: true
  docker_image_tag:
    description: 'Docker Image Tag (default is the commit SHA)'
    default : ${{ github.sha }}
    required: true
  github_token:
    description: 'Personal Access Token'
    default: ${{ github.token }}
    required: false
  dockerfile:
    description: 'Dockerfile'
    default: 'Dockerfile'
    required: false
  context:
    description: 'Docker Build Context'
    default: '.'
    required: false

outputs:
  docker_image_name: ${{ steps.get_image_name.outputs.docker_image_name }}
  docker_image_tag: ${{ steps.get_image_name.outputs.docker_image_tag }}

runs:
  using: "composite"
  steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Output Docker Image Name and Tag
      id: get_image_name
      shell: bash
      run: |
        echo "docker_image_name=${{ inputs.gcloud_registry }}/${{ inputs.gcloud_project_id }}/${{ inputs.docker_image_name }}" >> $GITHUB_ENV
        echo "docker_image_tag=${{ inputs.docker_image_tag }}" >> $GITHUB_ENV

    - uses: google-github-actions/auth@v2
      with:
        credentials_json: '${{ inputs.gcloud_service_key }}'

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v2

    - name: Configure Docker for GCR
      shell: bash
      run: |
        gcloud auth configure-docker ${{ inputs.gcloud_registry }}

    - name: Build Docker Image
      id: builder
      shell: bash
      run: |
        docker build --tag ${{ steps.get_image_name.outputs.docker_image_name }}:${{ steps.get_image_name.outputs.docker_image_tag }} -f ${{ inputs.dockerfile }} ${{ inputs.context }}

    - name: Push Docker Image to Google Cloud Registry
      shell: bash
      run: |
        docker push ${{ steps.get_image_name.outputs.docker_image_name }}:${{ steps.get_image_name.outputs.docker_image_tag }}